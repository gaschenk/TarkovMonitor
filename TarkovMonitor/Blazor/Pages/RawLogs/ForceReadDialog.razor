@using Humanizer
@using Timer = System.Threading.Timer
@inject GameWatcher eft

<MudDialog>
    <DialogContent>
        @if (IsEftLogsPathSet)
        {
            <MudSelect @bind-Value="selectedPath" Label="Open existing logs" HelperText="Choose which set of logs should be read from" OpenIcon="@Icons.Material.Filled.TextSnippet" AdornmentColor="Color.Secondary">
                @foreach (DateTime folderDate in logFolders.Keys)
                {
                    <MudSelectItem Value="@logFolders[folderDate]">@folderDate.ToLongDateString() - @folderDate.Humanize()</MudSelectItem>
                }
            </MudSelect>
        }
        else
        {
            <span>Could not find the Escape From Tarkov process to locate log folders, or no logs exist.</span>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudCheckBox Disabled="!IsEftLogsPathSet" @bind-Checked="isReadAll">Read all logs</MudCheckBox>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    bool isReadAll = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        logFolders = eft.GetLogFolders();
    }

    string selectedPath = "";

    Dictionary<DateTime, string> logFolders = new Dictionary<DateTime, string>();

    void Cancel() => MudDialog.Cancel();

    public bool IsEftLogsPathSet => eft.LogsPath != "";

    public void Submit()
    {
        if (isReadAll)
        {
            // Ignore newest log as it may be in use
            var tempLogFolders = logFolders.OrderByDescending(log => log.Key).Skip(1).Reverse();
            foreach (var (_, logPath) in tempLogFolders)
            {
                eft.ProcessLogs(logPath);
            }
        }
        else
        {
            // Check if a path was selected, and if so, load the logs from that path
            if (selectedPath != "")
            {
                eft.ProcessLogs(selectedPath);
            }
        }

        MudDialog.Close(DialogResult.Ok(true));
    }

}